MODULE Quick;
IMPORT O:=Out;

TYPE tFeld  = ARRAY  500 OF INTEGER; 
     tTable = ARRAY 1000 OF INTEGER;

VAR Feld:  tFeld;
    Table: tTable;

(************************************************************************************************************************)
PROCEDURE PrintFeld(Feld: tFeld);
VAR i:LONGINT; 
BEGIN (* PrintFeld *)
 FOR i:=0 TO 499 DO
  O.Int(Feld[i]); O.Str(' ');
  IF (i>0) & (i MOD 20=0) THEN O.Ln; END;
 END; (* FOR i *)
 O.Ln;
END PrintFeld;

(************************************************************************************************************************)
PROCEDURE Initialize(VAR Feld:tFeld);
BEGIN (* Initialize *)
 Feld[0]:=164;
 Feld[1]:=388;
 Feld[2]:=888;
 Feld[3]:=378;
 Feld[4]:=11;
 Feld[5]:=973;
 Feld[6]:=82;
 Feld[7]:=558;
 Feld[8]:=678;
 Feld[9]:=498;
 Feld[10]:=109;
 Feld[11]:=263;
 Feld[12]:=790;
 Feld[13]:=761;
 Feld[14]:=1;
 Feld[15]:=727;
 Feld[16]:=44;
 Feld[17]:=703;
 Feld[18]:=748;
 Feld[19]:=349;
 Feld[20]:=143;
 Feld[21]:=395;
 Feld[22]:=934;
 Feld[23]:=94;
 Feld[24]:=825;
 Feld[25]:=62;
 Feld[26]:=94;
 Feld[27]:=792;
 Feld[28]:=605;
 Feld[29]:=861;
 Feld[30]:=353;
 Feld[31]:=119;
 Feld[32]:=355;
 Feld[33]:=569;
 Feld[34]:=575;
 Feld[35]:=574;
 Feld[36]:=910;
 Feld[37]:=953;
 Feld[38]:=189;
 Feld[39]:=909;
 Feld[40]:=934;
 Feld[41]:=469;
 Feld[42]:=375;
 Feld[43]:=322;
 Feld[44]:=345;
 Feld[45]:=840;
 Feld[46]:=87;
 Feld[47]:=844;
 Feld[48]:=148;
 Feld[49]:=41;
 Feld[50]:=966;
 Feld[51]:=903;
 Feld[52]:=153;
 Feld[53]:=724;
 Feld[54]:=52;
 Feld[55]:=680;
 Feld[56]:=141;
 Feld[57]:=855;
 Feld[58]:=952;
 Feld[59]:=982;
 Feld[60]:=883;
 Feld[61]:=433;
 Feld[62]:=145;
 Feld[63]:=985;
 Feld[64]:=432;
 Feld[65]:=975;
 Feld[66]:=36;
 Feld[67]:=112;
 Feld[68]:=504;
 Feld[69]:=840;
 Feld[70]:=212;
 Feld[71]:=286;
 Feld[72]:=249;
 Feld[73]:=187;
 Feld[74]:=713;
 Feld[75]:=444;
 Feld[76]:=945;
 Feld[77]:=658;
 Feld[78]:=543;
 Feld[79]:=505;
 Feld[80]:=202;
 Feld[81]:=948;
 Feld[82]:=143;
 Feld[83]:=587;
 Feld[84]:=143;
 Feld[85]:=785;
 Feld[86]:=661;
 Feld[87]:=340;
 Feld[88]:=399;
 Feld[89]:=550;
 Feld[90]:=609;
 Feld[91]:=22;
 Feld[92]:=855;
 Feld[93]:=427;
 Feld[94]:=121;
 Feld[95]:=618;
 Feld[96]:=717;
 Feld[97]:=959;
 Feld[98]:=35;
 Feld[99]:=187;
 Feld[100]:=785;
 Feld[101]:=143;
 Feld[102]:=387;
 Feld[103]:=51;
 Feld[104]:=640;
 Feld[105]:=313;
 Feld[106]:=444;
 Feld[107]:=138;
 Feld[108]:=866;
 Feld[109]:=235;
 Feld[110]:=341;
 Feld[111]:=878;
 Feld[112]:=652;
 Feld[113]:=900;
 Feld[114]:=591;
 Feld[115]:=303;
 Feld[116]:=288;
 Feld[117]:=571;
 Feld[118]:=106;
 Feld[119]:=448;
 Feld[120]:=692;
 Feld[121]:=994;
 Feld[122]:=146;
 Feld[123]:=89;
 Feld[124]:=625;
 Feld[125]:=354;
 Feld[126]:=71;
 Feld[127]:=299;
 Feld[128]:=826;
 Feld[129]:=26;
 Feld[130]:=887;
 Feld[131]:=83;
 Feld[132]:=524;
 Feld[133]:=777;
 Feld[134]:=244;
 Feld[135]:=478;
 Feld[136]:=600;
 Feld[137]:=441;
 Feld[138]:=576;
 Feld[139]:=445;
 Feld[140]:=471;
 Feld[141]:=232;
 Feld[142]:=843;
 Feld[143]:=846;
 Feld[144]:=640;
 Feld[145]:=2;
 Feld[146]:=565;
 Feld[147]:=943;
 Feld[148]:=52;
 Feld[149]:=872;
 Feld[150]:=688;
 Feld[151]:=16;
 Feld[152]:=785;
 Feld[153]:=60;
 Feld[154]:=74;
 Feld[155]:=867;
 Feld[156]:=65;
 Feld[157]:=562;
 Feld[158]:=294;
 Feld[159]:=118;
 Feld[160]:=311;
 Feld[161]:=884;
 Feld[162]:=713;
 Feld[163]:=311;
 Feld[164]:=104;
 Feld[165]:=970;
 Feld[166]:=721;
 Feld[167]:=896;
 Feld[168]:=938;
 Feld[169]:=990;
 Feld[170]:=867;
 Feld[171]:=629;
 Feld[172]:=21;
 Feld[173]:=977;
 Feld[174]:=136;
 Feld[175]:=106;
 Feld[176]:=178;
 Feld[177]:=603;
 Feld[178]:=162;
 Feld[179]:=890;
 Feld[180]:=816;
 Feld[181]:=31;
 Feld[182]:=990;
 Feld[183]:=342;
 Feld[184]:=336;
 Feld[185]:=771;
 Feld[186]:=795;
 Feld[187]:=233;
 Feld[188]:=880;
 Feld[189]:=214;
 Feld[190]:=597;
 Feld[191]:=894;
 Feld[192]:=379;
 Feld[193]:=566;
 Feld[194]:=710;
 Feld[195]:=498;
 Feld[196]:=650;
 Feld[197]:=219;
 Feld[198]:=380;
 Feld[199]:=144;
 Feld[200]:=179;
 Feld[201]:=168;
 Feld[202]:=503;
 Feld[203]:=340;
 Feld[204]:=688;
 Feld[205]:=117;
 Feld[206]:=404;
 Feld[207]:=127;
 Feld[208]:=793;
 Feld[209]:=243;
 Feld[210]:=61;
 Feld[211]:=695;
 Feld[212]:=840;
 Feld[213]:=905;
 Feld[214]:=113;
 Feld[215]:=205;
 Feld[216]:=263;
 Feld[217]:=677;
 Feld[218]:=419;
 Feld[219]:=601;
 Feld[220]:=620;
 Feld[221]:=338;
 Feld[222]:=276;
 Feld[223]:=82;
 Feld[224]:=169;
 Feld[225]:=433;
 Feld[226]:=530;
 Feld[227]:=360;
 Feld[228]:=64;
 Feld[229]:=252;
 Feld[230]:=509;
 Feld[231]:=702;
 Feld[232]:=396;
 Feld[233]:=802;
 Feld[234]:=950;
 Feld[235]:=511;
 Feld[236]:=870;
 Feld[237]:=895;
 Feld[238]:=454;
 Feld[239]:=540;
 Feld[240]:=432;
 Feld[241]:=870;
 Feld[242]:=651;
 Feld[243]:=879;
 Feld[244]:=833;
 Feld[245]:=934;
 Feld[246]:=170;
 Feld[247]:=460;
 Feld[248]:=133;
 Feld[249]:=143;
 Feld[250]:=28;
 Feld[251]:=10;
 Feld[252]:=282;
 Feld[253]:=30;
 Feld[254]:=652;
 Feld[255]:=880;
 Feld[256]:=563;
 Feld[257]:=305;
 Feld[258]:=290;
 Feld[259]:=597;
 Feld[260]:=986;
 Feld[261]:=299;
 Feld[262]:=978;
 Feld[263]:=333;
 Feld[264]:=674;
 Feld[265]:=930;
 Feld[266]:=744;
 Feld[267]:=719;
 Feld[268]:=137;
 Feld[269]:=47;
 Feld[270]:=772;
 Feld[271]:=121;
 Feld[272]:=809;
 Feld[273]:=959;
 Feld[274]:=628;
 Feld[275]:=28;
 Feld[276]:=18;
 Feld[277]:=703;
 Feld[278]:=132;
 Feld[279]:=447;
 Feld[280]:=394;
 Feld[281]:=233;
 Feld[282]:=48;
 Feld[283]:=660;
 Feld[284]:=636;
 Feld[285]:=206;
 Feld[286]:=680;
 Feld[287]:=728;
 Feld[288]:=874;
 Feld[289]:=279;
 Feld[290]:=255;
 Feld[291]:=987;
 Feld[292]:=32;
 Feld[293]:=898;
 Feld[294]:=312;
 Feld[295]:=950;
 Feld[296]:=679;
 Feld[297]:=610;
 Feld[298]:=905;
 Feld[299]:=259;
 Feld[300]:=951;
 Feld[301]:=271;
 Feld[302]:=989;
 Feld[303]:=977;
 Feld[304]:=934;
 Feld[305]:=260;
 Feld[306]:=455;
 Feld[307]:=340;
 Feld[308]:=64;
 Feld[309]:=256;
 Feld[310]:=560;
 Feld[311]:=689;
 Feld[312]:=577;
 Feld[313]:=966;
 Feld[314]:=851;
 Feld[315]:=372;
 Feld[316]:=728;
 Feld[317]:=876;
 Feld[318]:=43;
 Feld[319]:=23;
 Feld[320]:=8;
 Feld[321]:=752;
 Feld[322]:=23;
 Feld[323]:=395;
 Feld[324]:=396;
 Feld[325]:=43;
 Feld[326]:=508;
 Feld[327]:=786;
 Feld[328]:=893;
 Feld[329]:=286;
 Feld[330]:=482;
 Feld[331]:=357;
 Feld[332]:=766;
 Feld[333]:=785;
 Feld[334]:=405;
 Feld[335]:=83;
 Feld[336]:=809;
 Feld[337]:=14;
 Feld[338]:=909;
 Feld[339]:=406;
 Feld[340]:=332;
 Feld[341]:=954;
 Feld[342]:=169;
 Feld[343]:=896;
 Feld[344]:=286;
 Feld[345]:=7;
 Feld[346]:=10;
 Feld[347]:=426;
 Feld[348]:=294;
 Feld[349]:=354;
 Feld[350]:=458;
 Feld[351]:=863;
 Feld[352]:=901;
 Feld[353]:=191;
 Feld[354]:=740;
 Feld[355]:=706;
 Feld[356]:=37;
 Feld[357]:=774;
 Feld[358]:=382;
 Feld[359]:=17;
 Feld[360]:=69;
 Feld[361]:=866;
 Feld[362]:=249;
 Feld[363]:=469;
 Feld[364]:=587;
 Feld[365]:=912;
 Feld[366]:=256;
 Feld[367]:=473;
 Feld[368]:=650;
 Feld[369]:=256;
 Feld[370]:=779;
 Feld[371]:=552;
 Feld[372]:=568;
 Feld[373]:=794;
 Feld[374]:=480;
 Feld[375]:=269;
 Feld[376]:=653;
 Feld[377]:=213;
 Feld[378]:=533;
 Feld[379]:=102;
 Feld[380]:=79;
 Feld[381]:=282;
 Feld[382]:=566;
 Feld[383]:=308;
 Feld[384]:=752;
 Feld[385]:=746;
 Feld[386]:=4;
 Feld[387]:=633;
 Feld[388]:=372;
 Feld[389]:=317;
 Feld[390]:=736;
 Feld[391]:=282;
 Feld[392]:=62;
 Feld[393]:=165;
 Feld[394]:=185;
 Feld[395]:=883;
 Feld[396]:=522;
 Feld[397]:=361;
 Feld[398]:=774;
 Feld[399]:=554;
 Feld[400]:=659;
 Feld[401]:=620;
 Feld[402]:=958;
 Feld[403]:=793;
 Feld[404]:=830;
 Feld[405]:=739;
 Feld[406]:=429;
 Feld[407]:=209;
 Feld[408]:=341;
 Feld[409]:=486;
 Feld[410]:=709;
 Feld[411]:=669;
 Feld[412]:=544;
 Feld[413]:=698;
 Feld[414]:=151;
 Feld[415]:=748;
 Feld[416]:=927;
 Feld[417]:=811;
 Feld[418]:=52;
 Feld[419]:=868;
 Feld[420]:=434;
 Feld[421]:=616;
 Feld[422]:=247;
 Feld[423]:=602;
 Feld[424]:=313;
 Feld[425]:=399;
 Feld[426]:=908;
 Feld[427]:=361;
 Feld[428]:=23;
 Feld[429]:=617;
 Feld[430]:=96;
 Feld[431]:=861;
 Feld[432]:=553;
 Feld[433]:=19;
 Feld[434]:=209;
 Feld[435]:=146;
 Feld[436]:=825;
 Feld[437]:=662;
 Feld[438]:=458;
 Feld[439]:=898;
 Feld[440]:=673;
 Feld[441]:=213;
 Feld[442]:=684;
 Feld[443]:=638;
 Feld[444]:=750;
 Feld[445]:=352;
 Feld[446]:=926;
 Feld[447]:=663;
 Feld[448]:=477;
 Feld[449]:=981;
 Feld[450]:=190;
 Feld[451]:=882;
 Feld[452]:=383;
 Feld[453]:=391;
 Feld[454]:=48;
 Feld[455]:=918;
 Feld[456]:=571;
 Feld[457]:=375;
 Feld[458]:=2;
 Feld[459]:=374;
 Feld[460]:=962;
 Feld[461]:=489;
 Feld[462]:=666;
 Feld[463]:=239;
 Feld[464]:=557;
 Feld[465]:=921;
 Feld[466]:=751;
 Feld[467]:=182;
 Feld[468]:=846;
 Feld[469]:=900;
 Feld[470]:=73;
 Feld[471]:=988;
 Feld[472]:=686;
 Feld[473]:=33;
 Feld[474]:=58;
 Feld[475]:=714;
 Feld[476]:=397;
 Feld[477]:=36;
 Feld[478]:=649;
 Feld[479]:=231;
 Feld[480]:=368;
 Feld[481]:=681;
 Feld[482]:=362;
 Feld[483]:=396;
 Feld[484]:=977;
 Feld[485]:=584;
 Feld[486]:=527;
 Feld[487]:=190;
 Feld[488]:=973;
 Feld[489]:=528;
 Feld[490]:=295;
 Feld[491]:=405;
 Feld[492]:=508;
 Feld[493]:=358;
 Feld[494]:=970;
 Feld[495]:=661;
 Feld[496]:=898;
 Feld[497]:=115;
 Feld[498]:=94;
 Feld[499]:=862;
END Initialize;

(************************************************************************************************************************)
PROCEDURE SortFeld(VAR Feld: tFeld);

 PROCEDURE QuickSort(UnterGrenze,OberGrenze:LONGINT);
 VAR auf, ab:LONGINT; 

  PROCEDURE Partition;
  VAR MitteIndex     : LONGINT; 
      MitteElem, temp: INTEGER; 
  BEGIN (* Partition *)
   MitteIndex:=(UnterGrenze+OberGrenze) DIV 2;
   MitteElem:=Feld[MitteIndex]; 
   auf:=UnterGrenze; 
   ab:=OberGrenze; 
   WHILE auf<=ab DO
    WHILE (auf<=OberGrenze) & (Feld[auf]<=MitteElem) DO
     INC(auf); 
    END; (* WHILE *)
    WHILE (UnterGrenze<=ab) & (MitteElem<=Feld[ab]) DO
     DEC(ab); 
    END; (* WHILE *)
    IF auf<ab THEN 
     temp:=Feld[auf];
     Feld[auf]:=Feld[ab]; 
     Feld[ab]:=temp; 
     INC(auf); 
     DEC(ab); 
    END; (* IF *)
   END; (* WHILE auf<=ab *)
   
   IF auf<MitteIndex THEN
    temp:=Feld[auf];
    Feld[auf]:=MitteElem;
    Feld[MitteIndex]:=temp; 
    INC(auf); 
   END; (* IF *)
   IF MitteIndex<ab THEN 
    temp:=Feld[ab];
    Feld[ab]:=MitteElem;
    Feld[MitteIndex]:=temp; 
    DEC(ab); 
   END; (* IF *)
  END Partition;

 BEGIN (* QuickSort *)
  IF UnterGrenze<OberGrenze THEN 
    Partition;
    QuickSort(UnterGrenze,ab);
    QuickSort(auf,OberGrenze);
  END; (* IF *)
 END QuickSort;

BEGIN (* SortFeld *)
 QuickSort(0,499);
END SortFeld;

(************************************************************************************************************************)
PROCEDURE CalcTable(VAR Table : tTable);
VAR i:LONGINT; 
BEGIN (* CalcTable *)
 FOR i:=0 TO 499 DO
  INC(Table[Feld[i]]);
 END; (* FOR i *)
END CalcTable;

(************************************************************************************************************************)
PROCEDURE PrintStatistik(Table: tTable);
VAR i:LONGINT; 
BEGIN (* PrintStatistik *)
 O.StrLn('Haeufigkeit:');
 FOR i:=0 TO 999 DO
  O.Int(i);
  O.Str(' => ');
  O.Int(Table[i]);
  O.StrLn(' mal');
 END; (* FOR *)
END PrintStatistik;

(************************************************************************************************************************)
BEGIN (* Quick *)
 Initialize(Feld);
 O.StrLn('Unsortiert:');
 PrintFeld(Feld);
 SortFeld(Feld);
 O.StrLn('Sortiert:');
 PrintFeld(Feld);
 CalcTable(Table);
 PrintStatistik(Table);
END Quick.
