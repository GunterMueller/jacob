Compiling LDes04 (LDes04.ob2) 
Linking LDes04
	.comm	LDes04$G,8

#------------------------------------------------------------------------------
# TDesc for module globals
	.text
LDes04$N:
	.asciz	"LDes04"
	.align	2,144
	.long	LDes04$N
	.long	0
	.long	_NILPROC
	.globl	LDes04$D
LDes04$D:
	movl	(%ebx),%ebx
	jmp	-4(%ebx)

#------------------------------------------------------------------------------
# TDesc for LDes04.P2.po^
L3$N:
	.asciz	"LDes04.P2.po^"
	.align	2,144
L3$S:
	movl	(%ebx),%eax
	leal	15(%ebx,%eax),%ebx
	andl	$0xfffffff8,%ebx
	jmp	%esi

	.align	2,144
	.long	1	# -16 elemSize
	.long	L3$N	# -12 name
	.long	-1	# -8  size/odim
	.long	L3$S	# -4  skipper

L3$D:

#------------------------------------------------------------------------------
# PROCEDURE P1()
# LEVEL  = 1
# LSPACE = 0
# TSPACE = 0

# TDesc for proc locals
L0$N:
	.asciz	"LDes04.P1"
	.align	2,144
	.long	L0$N
	.long	0
	.long	_NILPROC
L0$D:
	movl	(%ebx),%ebx
	jmp	-4(%ebx)

	.align	2,144
L0:
	pushl	%ebp
	pushl	$L0$D	# TDesc of proc
	leal	4(%esp),%ebp
	pushl	%ebp	# disp-next
	subl	$L4,%esp

	leave
	ret
L4=	0

#------------------------------------------------------------------------------
# PROCEDURE P3()
# LEVEL  = 2
# LSPACE = 0
# TSPACE = 0

# TDesc for proc locals
L2$N:
	.asciz	"LDes04.P2.P3"
	.align	2,144
	.long	L2$N
	.long	0
	.long	_NILPROC
L2$D:
	movl	(%ebx),%ebx
	jmp	-4(%ebx)

	.align	2,144
L2:
	pushl	%ebp
	pushl	$L2$D	# TDesc of proc
	pushl	-8(%ebp)
	leal	8(%esp),%ebp
	pushl	%ebp	# disp-next
	subl	$L5,%esp

	# bo:=FALSE;
	movl	-8(%ebp),%eax
	movb	$0,-9(%eax)

	# ch:=0X;
	movl	-8(%ebp),%eax
	movb	$0,-10(%eax)

	# si:=2;
	movl	-8(%ebp),%eax
	movb	$2,-11(%eax)

	# in:=128;
	movl	-8(%ebp),%eax
	movw	$128,-14(%eax)

	# li:=2000000;
	movl	-8(%ebp),%eax
	movl	$2000000,-20(%eax)

	# re:=2.00000E0;
	movl	-8(%ebp),%eax
	movl	$1073741823,-24(%eax)

	# lr:=2.0000000000000D0;
	movl	-8(%ebp),%eax
	movl	$-1,-32(%eax)
	movl	$1073741823,-28(%eax)

	# se:={};
	movl	-8(%ebp),%eax
	movl	$0,-36(%eax)

	# po:=NIL;
	movl	-8(%ebp),%eax
	movl	$0,-40(%eax)

	# pr:=P1;
	movl	-8(%ebp),%ebx
	leal	L0,%eax	# P1 
	movl	%eax,-44(%ebx)

	leave
	ret
L5=	0

#------------------------------------------------------------------------------
# PROCEDURE P2()
# LEVEL  = 1
# LSPACE = 36
# TSPACE = 0
#     -9 bo: BOOLEAN
#    -10 ch: CHAR
#    -11 si: SHORTINT
#    -14 in: INTEGER
#    -20 li: LONGINT
#    -24 re: REAL
#    -32 lr: LONGREAL
#    -36 se: SET
#    -40 po: POINTER TO ARRAY OF CHAR
#    -44 pr: PROCEDURE()

# TDesc for proc locals
L1$N:
	.asciz	"LDes04.P2"
	.align	2,144
	.long	L1$N
	.long	0
	.long	_NILPROC
L1$D:
	movl	(%ebx),%ebx
	jmp	-4(%ebx)

	.align	2,144
L1:
	pushl	%ebp
	pushl	$L1$D	# TDesc of proc
	leal	4(%esp),%ebp
	pushl	%ebp	# disp-next
	subl	$36+L6,%esp

	# pointer variable init code
	movl	$0,-40(%ebp)

	# proc variable init code
	movl	$_NILPROC,-44(%ebp)

	leave
	ret
L6=	0

#------------------------------------------------------------------------------
# module init proc
# TSPACE = 0
LDes04$I$N:
	.asciz	"LDes04$I"
	.align	2,144
	.long	LDes04$I$N
	.long	0
	.long	_NILPROC
LDes04$I$D:
	movl	(%ebx),%ebx
	jmp	-4(%ebx)

	.align	2,144
	.globl	LDes04$I
LDes04$I:
	pushl	%ebp
	movl	%esp,%ebp
	pushl	$LDes04$I$D
	subl	$L7,%esp

	leave
	ret
L7=	0

