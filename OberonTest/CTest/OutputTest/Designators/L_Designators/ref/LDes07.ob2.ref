Compiling LDes07 (LDes07.ob2) 
  Importing LDes01 (LDes01.ob2)
Linking LDes07
	.comm	LDes07$G,16
#      8 PO: LDes01.TPO
#     12 PR: LDes01.TPR

#------------------------------------------------------------------------------
# TDesc for module globals
LDes07$N:
	.asciz	"LDes07"
	.align	2,144
	.long	LDes07$N
	.long	0
	.long	_NILPROC
	.globl	LDes07$D
LDes07$D:
	movl	(%ebx),%ebx
	jmp	-4(%ebx)

#------------------------------------------------------------------------------
# module init proc
# TSPACE = 0
LDes07$I$N:
	.asciz	"LDes07$I"
	.align	2,144
	.long	LDes07$I$N
	.long	0
	.long	_NILPROC
LDes07$I$D:
	movl	(%ebx),%ebx
	jmp	-4(%ebx)

	.align	2,144
	.globl	LDes07$I
LDes07$I:
	pushl	%ebp
	movl	%esp,%ebp
	pushl	$LDes07$I$D
	subl	$L0,%esp

	# pointer variable init code
	movl	$0,8+LDes07$G

	# proc variable init code
	movl	$_NILPROC,12+LDes07$G

	# L.bo:=TRUE;
	movb	$1,8+LDes01$G	# bo 

	# L.ch:='A';
	movb	$65,9+LDes01$G	# ch 

	# L.si:=6;
	movb	$6,10+LDes01$G	# si 

	# L.in:=4711;
	movw	$4711,12+LDes01$G	# in 

	# L.li:=80000;
	movl	$80000,16+LDes01$G	# li 

	# L.re:=2.00000E0;
	movl	$1073741823,20+LDes01$G	# re 

	# L.lr:=2.0000000000000D0;
	movl	$-1,24+LDes01$G	# lr 
	movl	$1073741823,28+LDes01$G	# lr 

	# L.se:={};
	movl	$0,32+LDes01$G	# se 

	# L.po:=PO;
	movl	8+LDes07$G,%eax	# PO 
	movl	%eax,36+LDes01$G	# po 

	# L.pr:=PR;
	movl	12+LDes07$G,%eax	# PR 
	movl	%eax,40+LDes01$G	# pr 

	leave
	ret
L0=	0

